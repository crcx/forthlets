( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
( Chord Keyboard ["chorder"]                                )
( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
( Distributed under the Creative Commons Zero License:      )
(                                                           )
( The person who associated a work with this document has   )
( dedicated this work to the Commons by waiving all of his  )
( or her rights to the work under copyright law and all     )
( related or neighboring legal rights he or she had in the  )
( work, to the extent allowable by law.                     )
(                                                           )
( Other Rights â€” In no way are any of the following rights  )
( affected by CC0:                                          )
(  * Patent or trademark rights held by the person who      )
(    associated this document with a work.                  )
(  * Rights other persons may have either in the work       )
(    itself or in how the work is used, such as publicity   )
(    or privacy rights.                                     )
(                                                           )
( Charles Childers, December 2009                           )
( Luke Parrish, December 2009                               )
( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )

{{
  : default: ' 2 + compile ; compile-only
  : defkey default: key ;

  : ^ ( nc- ) , +1 ;

  variable len
  create list
  0
  key j ^ ( 0 )
  key i ^ ( 1 )
  key o ^ ( 2 )
  key ; ^ ( 3 )
  1+ len !

  variable skip
  variable offset
  : command ( c-c )
    dup char: z =if pop drop bye ;then
    dup char: l =if drop char: x 64 offset +! then
    dup char: k =if drop char: x 64 offset -! then
    dup char: x =if drop 0 skip on ;then
  ;

  : tonum   ( k-n )
    len @ for
      r 1- list + @ over =if drop pop 1- ;then
    next ;
  4 constant b
  : process 0; for b * next ;
  : input 3 for
      skip @ !if
        key command tonum r 1- process
      then
    next ;
---reveal---
  : chorder
    repeat
      input
      + + offset @ +
      skip @ if
        drop
        skip off
      else
        . cr
      then
    again ;
}}
