( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
( Web Framework for Retro                                     )
( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
: array for 20 allot next ;

create #atts 0 ,  create atts 20 array
create #tags 0 ,  create tags 20 array
create #id 0 ,    create ids 20 array
create #class 0 , create classes 20 array

: $, ( $- )
  here 4 + literal, keepString drop ;

compiler: ~ ( "- )
  126 accept tib $, ` type ;

: +id ( $- )
  dup getLength 1+ push #id @ 20 * ids + pop copy 1 #id +! ;

: +class ( $- )
  dup getLength 1+ push #class @ 20 * classes + pop copy 1 #class +! ;

: +att ( $- )
  dup getLength 1+ push #atts @ 20 * atts + pop copy 1 #atts +! ;

: class= ( - )
  ."  class='" ;

: id= ( - )
  ."  id='" ;

: x ( - )
  ." '" ;

compiler: attr: 32 accept tib +att ;

: .class ( - )
  #class @ 0; 1- 20 * classes + ` class= $, ` type ` x 1 #class -! ;

: .att ( - )
  #atts @ 0; 1- 20 * atts 32 literal, ` emit $, ` type 1 #atts -! ;

: .id ( - )
   #id @ 0; 1- 20 * ids + ` id= $, ` type ` x 1 #id -! ;

: .tag ( - )
  #tags @ 1- 20 * tags + $, ` type ;

: +tag ( - )
  dup getLength 1+ push #tags @ 20 * tags + pop copy 1 #tags +! ;

compiler: id: 32 accept tib +id ;
compiler: class: 32 accept tib +class ;
: < ." <" ;
: > ." >" ;
: / ." /" ;
: <> ` < .tag .id .class .att ` > ;
: </> ` < ` / .tag ` > ;
compiler: ( 32 accept tib +tag <> ;
compiler: ) </> 1 #tags -! ;
: (a0) ." <a href='" ;
: (a1) ." '>" ;
compiler: [a ` (a0) 32 accept tib $, ` type ` (a1) s" a" +tag ;
: (c0) ." <link rel='stylesheet' href='" ;
: (c1) ." '>" ;
compiler: css: ` (c0) 32 accept tib $, ` type ` (c1) ;
: ] ." </a>" ;

: render ['] emit :devector ;
: end ['] drop ['] emit :is save bye ;

: blank ; ' blank is ok
: xxx ['] drop ['] emit :is ;
macro: ; ` xxx ` ;; ['] [ execute ;; [


macro: | 124 accept ;
save bye
